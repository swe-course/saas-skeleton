
module.exports = {
  options: async (tln, args) => {},
  env: async (tln, env) => {

  },
  dotenvs: async (tln) => [],
  inherits: async (tln) => [],
  depends: async (tln) => [],
  steps: async (tln) => [
    { id: 'prereq-app', builder: async (tln, script) => {
        script.set([`
tln install web/portal:services/auth --depends
        `]);
      }
    },
    { id: 'init-app', builder: async (tln, script) => {
        script.set([`
tln init web/portal
tln get services/auth
        `]);
      }
    },
    { id: 'build-app', builder: async (tln, script) => {
        script.set([`
tln build web/portal:services/auth
        `]);
      }
    },
    { id: 'test-app', builder: async (tln, script) => {
        script.set([`
tln test web/portal:services/auth
        `]);
      }
    },
    { id: 'package-app', builder: async (tln, script) => {
        script.set([`
tln test web/portal:services/auth
        `]);
      }
    },
    { id: 'construct-infr', builder: async (tln, script) => {
        script.set([`
tln construct ii/do
        `]);
      }
    },
    { id: 'deploy-app', builder: async (tln, script) => {
        script.set([`
        `]);
      }
    },
    { id: 'e2e-app', builder: async (tln, script) => {
        script.set([`
        `]);
      }
    },
    { id: 'undeploy-app', builder: async (tln, script) => {
        script.set([`
        `]);
      }
    },
    { id: 'deconstruct-infr', builder: async (tln, script) => {
        script.set([`
tln deconstruct ii/do
        `]);
      }
    },

  ],
  components: async (tln) => []
}